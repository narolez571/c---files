//TODO check if prefix is working properly
//Remove retroot in class trie
#include<iostream>
#include<cstring>

using namespace std;

struct trienode
{
	char ch;
	int prefix;
	trienode *next[26];
};

class trie
{
	trienode *ROOT;
	public:
	trie()
	{
		ROOT=new trienode;
		ROOT->ch='_';
		ROOT->prefix=0;
		memset(ROOT->next,0,sizeof(ROOT->next));
	}
	trienode *retroot(){return ROOT;}
	void insertword(string,int,trienode *);
	void findword(string word);
	void findpref(string word);
};

void trie::insertword(string word,int k,trienode *curr)//=ROOT)
{
	if(k>=word.length())	
		return;
	curr->prefix++;
	if(curr->next[word[k]-'a']==NULL)
	{
		trienode *temp=new trienode;
		temp->ch=word[k];
		temp->prefix=0;
		memset(temp->next,0,sizeof(temp->next));
		curr->next[word[k]-'a']=temp;
	}
	else
	{
		curr->prefix+=1;
	}
	insertword(word,k+1,curr->next[word[k]-'a']);
}

void trie::findword(string word)
{
	trienode *temp=ROOT;
	for(int k=0;k<word.length();k++)
	{
		if(temp->next[word[k]-'a']==NULL)
		{
			cout<<"Word not found\n";
			return;
		}
		temp=temp->next[word[k]-'a'];
	}
	cout<<"Word found and prefix of "<<temp->prefix<<" words\n";
}

int main()
{
	trie T;
	T.insertword("shikhar",0,T.retroot());
	T.insertword("shikhark",0,T.retroot());
	T.insertword("shikha",0,T.retroot());
	T.insertword("abcdef",0,T.retroot());	
	T.findword("z");
	return 0;
}
